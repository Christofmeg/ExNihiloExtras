plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
	id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '1.19.2-1.0.0'
group = 'com.christofmeg.${mod_name}'
archivesBaseName = 'exnihiloextras'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
	mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                exnihiloextras {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

repositories {
	maven {
    // location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
		content {
            includeGroup "mezz.jei"
        }
	}
	maven {
    // location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev/"
		content {
            includeGroup "mezz.jei"
        }
	}
	maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://beta.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

}

dependencies {
	minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'
	
	// JEI
    if (project.hasProperty('jei_version')) {
		compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
		compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"))
		runtimeOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}"))
    }
    // CONFIGURED
    if (project.hasProperty('configured_version')) {
        implementation fg.deobf("curse.maven:configured-457570:${configured_version}")
    }
    // CATALOGUE
    if (project.hasProperty('catalogue_version')) {
        implementation fg.deobf("curse.maven:catalogue-459701:${catalogue_version}")
    }
    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:4440341")

    implementation files('local/ExNihiloSequentia-1.19.2-4.2.0.55.jar')
    implementation files('local/ExNihiloThermal-1.19.2-4.2.0.3.jar')
        implementation fg.deobf("curse.maven:thermal-foundation-222880:4382373")
        implementation fg.deobf("curse.maven:cofh-core-69162:4385216")


}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "exnihiloextras",
                "Specification-Vendor"    : "Christofmeg",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Christofmeg",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources {
	exclude '.cache'
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
